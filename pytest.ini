[tool:pytest]
# pytest配置文件

# 测试发现
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# 输出配置
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10
    --html=reports/report.html
    --self-contained-html
    --junitxml=reports/junit.xml

# 标记定义
markers =
    # 测试类型标记
    smoke: 冒烟测试，核心功能的快速验证
    regression: 回归测试，全面的功能验证
    integration: 集成测试，多个组件协同工作的测试
    unit: 单元测试，单个组件的测试
    
    # 功能模块标记
    login: 登录功能测试
    home: 首页功能测试
    products: 商品功能测试
    cart: 购物车功能测试
    checkout: 结算功能测试
    user: 用户管理测试
    admin: 管理员功能测试
    
    # 测试层级标记
    ui: UI自动化测试
    api: API接口测试
    database: 数据库测试
    performance: 性能测试
    security: 安全测试
    
    # 优先级标记
    critical: 关键功能测试
    high: 高优先级测试
    medium: 中优先级测试
    low: 低优先级测试
    
    # 浏览器标记
    chrome: Chrome浏览器测试
    firefox: Firefox浏览器测试
    edge: Edge浏览器测试
    
    # 设备标记
    desktop: 桌面端测试
    mobile: 移动端测试
    tablet: 平板端测试
    
    # 特殊标记
    slow: 执行时间较长的测试
    fast: 执行时间较短的测试
    flaky: 可能不稳定的测试
    
    # 功能特性标记
    search: 搜索功能测试
    filter: 筛选功能测试
    sort: 排序功能测试
    pagination: 分页功能测试
    navigation: 导航功能测试
    form: 表单功能测试
    validation: 验证功能测试
    
    # 用户操作标记
    add_item: 添加商品测试
    remove_item: 删除商品测试
    update_quantity: 更新数量测试
    selection: 选择功能测试
    bulk_operations: 批量操作测试
    
    # 界面元素标记
    carousel: 轮播图测试
    modal: 模态框测试
    dropdown: 下拉菜单测试
    
    # 响应式设计标记
    responsive: 响应式设计测试
    accessibility: 可访问性测试
    
    # 边界情况标记
    edge_case: 边界情况测试
    error_handling: 错误处理测试
    
    # 业务流程标记
    workflow: 业务流程测试
    end_to_end: 端到端测试
    
    # 第三方集成标记
    payment: 支付功能测试
    email: 邮件功能测试
    
    # 安全相关标记
    authentication: 认证测试
    authorization: 授权测试
    xss: XSS防护测试
    sql_injection: SQL注入防护测试
    csrf: CSRF防护测试
    
    # 其他功能标记
    coupon: 优惠券功能测试
    summary: 摘要计算测试
    messages: 消息提示测试
    statistics: 统计数据测试
    features: 特色功能测试

# 最小版本要求
minversion = 6.0

# 测试目录
norecursedirs = .git .tox dist build *.egg venv env

# 日志配置
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# 过滤警告
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning